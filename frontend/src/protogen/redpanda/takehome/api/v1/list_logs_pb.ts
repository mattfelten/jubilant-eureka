// @generated by protoc-gen-es v2.2.5 with parameter "target=ts"
// @generated from file redpanda/takehome/api/v1/list_logs.proto (package redpanda.takehome.api.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file redpanda/takehome/api/v1/list_logs.proto.
 */
export const file_redpanda_takehome_api_v1_list_logs: GenFile = /*@__PURE__*/
  fileDesc("CihyZWRwYW5kYS90YWtlaG9tZS9hcGkvdjEvbGlzdF9sb2dzLnByb3RvEhhyZWRwYW5kYS50YWtlaG9tZS5hcGkudjEiyAEKD0xpc3RMb2dzUmVxdWVzdBIUCgxwYXJ0aXRpb25faWQYASABKAUSDgoGb2Zmc2V0GAIgASgDEhcKD3N0YXJ0X3RpbWVzdGFtcBgDIAEoAxITCgttYXhfcmVzdWx0cxgEIAEoBRIYChBtYXhfbWVzc2FnZV9zaXplGAUgASgFEjcKB3NlcnZpY2UYBiABKA4yJi5yZWRwYW5kYS50YWtlaG9tZS5hcGkudjEuTWljcm9TZXJ2aWNlEg4KBmZvbGxvdxgHIAEoCCL8AgoQTGlzdExvZ3NSZXNwb25zZRI+CgRkYXRhGAEgASgLMi4ucmVkcGFuZGEudGFrZWhvbWUuYXBpLnYxLkxpc3RMb2dzUmVzcG9uc2UuTG9nSAASTQoFcGhhc2UYAiABKAsyPC5yZWRwYW5kYS50YWtlaG9tZS5hcGkudjEuTGlzdExvZ3NSZXNwb25zZS5Db21wbGV0aW9uU3VtbWFyeUgAEg8KBWVycm9yGAMgASgJSAAaXgoDTG9nEhQKDHBhcnRpdGlvbl9pZBgBIAEoBRIOCgZvZmZzZXQYAiABKAMSEQoJdGltZXN0YW1wGAMgASgDEgsKA2xvZxgEIAEoCRIRCgl0b29fbGFyZ2UYBSABKAgaVQoRQ29tcGxldGlvblN1bW1hcnkSEgoKZWxhcHNlZF9tcxgBIAEoAxIUCgxpc19jYW5jZWxsZWQYAiABKAgSFgoOYnl0ZXNfY29uc3VtZWQYAyABKANCEQoPY29udHJvbF9tZXNzYWdlKn4KDE1pY3JvU2VydmljZRIdChlNSUNST19TRVJWSUNFX1VOU1BFQ0lGSUVEEAASGQoVTUlDUk9fU0VSVklDRV9HQVRFV0FZEAESGgoWTUlDUk9fU0VSVklDRV9BSV9BR0VOVBACEhgKFE1JQ1JPX1NFUlZJQ0VfQk9SS0VEEAMycwoKTG9nU2VydmljZRJlCghMaXN0TG9ncxIpLnJlZHBhbmRhLnRha2Vob21lLmFwaS52MS5MaXN0TG9nc1JlcXVlc3QaKi5yZWRwYW5kYS50YWtlaG9tZS5hcGkudjEuTGlzdExvZ3NSZXNwb25zZSIAMAFCiwIKHGNvbS5yZWRwYW5kYS50YWtlaG9tZS5hcGkudjFCDUxpc3RMb2dzUHJvdG9QAVpZZ2l0aHViLmNvbS9yZWRwYW5kYS1kYXRhL3Rha2Vob21lLXV4LXRlYW0vYmFja2VuZC9wcm90b2dlbi9yZWRwYW5kYS90YWtlaG9tZS9hcGkvdjE7YXBpdjGiAgNSVEGqAhhSZWRwYW5kYS5UYWtlaG9tZS5BcGkuVjHKAhhSZWRwYW5kYVxUYWtlaG9tZVxBcGlcVjHiAiRSZWRwYW5kYVxUYWtlaG9tZVxBcGlcVjFcR1BCTWV0YWRhdGHqAhtSZWRwYW5kYTo6VGFrZWhvbWU6OkFwaTo6VjFiBnByb3RvMw");

/**
 * ListLogsRequest is the request for ListLogs call.
 *
 * @generated from message redpanda.takehome.api.v1.ListLogsRequest
 */
export type ListLogsRequest = Message<"redpanda.takehome.api.v1.ListLogsRequest"> & {
  /**
   * @generated from field: int32 partition_id = 1;
   */
  partitionId: number;

  /**
   * @generated from field: int64 offset = 2;
   */
  offset: bigint;

  /**
   * @generated from field: int64 start_timestamp = 3;
   */
  startTimestamp: bigint;

  /**
   * @generated from field: int32 max_results = 4;
   */
  maxResults: number;

  /**
   * LogMessages beyond this size limit will omit the log response
   * and set the bool
   *
   * @generated from field: int32 max_message_size = 5;
   */
  maxMessageSize: number;

  /**
   * The service whose log messages you want to retrieve.
   *
   * @generated from field: redpanda.takehome.api.v1.MicroService service = 6;
   */
  service: MicroService;

  /**
   * If true, the server will hold the call open and continuously
   * emit new log messages as theyâ€™re produced.
   *
   * @generated from field: bool follow = 7;
   */
  follow: boolean;
};

/**
 * Describes the message redpanda.takehome.api.v1.ListLogsRequest.
 * Use `create(ListLogsRequestSchema)` to create a new message.
 */
export const ListLogsRequestSchema: GenMessage<ListLogsRequest> = /*@__PURE__*/
  messageDesc(file_redpanda_takehome_api_v1_list_logs, 0);

/**
 * ListLogsResponse is the response for ListLogsRequest call.
 *
 * @generated from message redpanda.takehome.api.v1.ListLogsResponse
 */
export type ListLogsResponse = Message<"redpanda.takehome.api.v1.ListLogsResponse"> & {
  /**
   * @generated from oneof redpanda.takehome.api.v1.ListLogsResponse.control_message
   */
  controlMessage: {
    /**
     * @generated from field: redpanda.takehome.api.v1.ListLogsResponse.Log data = 1;
     */
    value: ListLogsResponse_Log;
    case: "data";
  } | {
    /**
     * @generated from field: redpanda.takehome.api.v1.ListLogsResponse.CompletionSummary phase = 2;
     */
    value: ListLogsResponse_CompletionSummary;
    case: "phase";
  } | {
    /**
     * @generated from field: string error = 3;
     */
    value: string;
    case: "error";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message redpanda.takehome.api.v1.ListLogsResponse.
 * Use `create(ListLogsResponseSchema)` to create a new message.
 */
export const ListLogsResponseSchema: GenMessage<ListLogsResponse> = /*@__PURE__*/
  messageDesc(file_redpanda_takehome_api_v1_list_logs, 1);

/**
 * @generated from message redpanda.takehome.api.v1.ListLogsResponse.Log
 */
export type ListLogsResponse_Log = Message<"redpanda.takehome.api.v1.ListLogsResponse.Log"> & {
  /**
   * @generated from field: int32 partition_id = 1;
   */
  partitionId: number;

  /**
   * @generated from field: int64 offset = 2;
   */
  offset: bigint;

  /**
   * @generated from field: int64 timestamp = 3;
   */
  timestamp: bigint;

  /**
   * @generated from field: string log = 4;
   */
  log: string;

  /**
   * @generated from field: bool too_large = 5;
   */
  tooLarge: boolean;
};

/**
 * Describes the message redpanda.takehome.api.v1.ListLogsResponse.Log.
 * Use `create(ListLogsResponse_LogSchema)` to create a new message.
 */
export const ListLogsResponse_LogSchema: GenMessage<ListLogsResponse_Log> = /*@__PURE__*/
  messageDesc(file_redpanda_takehome_api_v1_list_logs, 1, 0);

/**
 * @generated from message redpanda.takehome.api.v1.ListLogsResponse.CompletionSummary
 */
export type ListLogsResponse_CompletionSummary = Message<"redpanda.takehome.api.v1.ListLogsResponse.CompletionSummary"> & {
  /**
   * Total elapsed time in milliseconds.
   *
   * @generated from field: int64 elapsed_ms = 1;
   */
  elapsedMs: bigint;

  /**
   * Whether the call was cancelled.
   *
   * @generated from field: bool is_cancelled = 2;
   */
  isCancelled: boolean;

  /**
   * Total consumed bytes.
   *
   * @generated from field: int64 bytes_consumed = 3;
   */
  bytesConsumed: bigint;
};

/**
 * Describes the message redpanda.takehome.api.v1.ListLogsResponse.CompletionSummary.
 * Use `create(ListLogsResponse_CompletionSummarySchema)` to create a new message.
 */
export const ListLogsResponse_CompletionSummarySchema: GenMessage<ListLogsResponse_CompletionSummary> = /*@__PURE__*/
  messageDesc(file_redpanda_takehome_api_v1_list_logs, 1, 1);

/**
 * @generated from enum redpanda.takehome.api.v1.MicroService
 */
export enum MicroService {
  /**
   * @generated from enum value: MICRO_SERVICE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Gateway produces a lot of log messages.
   *
   * @generated from enum value: MICRO_SERVICE_GATEWAY = 1;
   */
  GATEWAY = 1,

  /**
   * The AI agent is rarely invoked and therefore produces very few log records.
   *
   * @generated from enum value: MICRO_SERVICE_AI_AGENT = 2;
   */
  AI_AGENT = 2,

  /**
   * Borked is a poorly witten service and is always boken and therefore mostly
   * spams error messages :(.
   *
   * @generated from enum value: MICRO_SERVICE_BORKED = 3;
   */
  BORKED = 3,
}

/**
 * Describes the enum redpanda.takehome.api.v1.MicroService.
 */
export const MicroServiceSchema: GenEnum<MicroService> = /*@__PURE__*/
  enumDesc(file_redpanda_takehome_api_v1_list_logs, 0);

/**
 * @generated from service redpanda.takehome.api.v1.LogService
 */
export const LogService: GenService<{
  /**
   * @generated from rpc redpanda.takehome.api.v1.LogService.ListLogs
   */
  listLogs: {
    methodKind: "server_streaming";
    input: typeof ListLogsRequestSchema;
    output: typeof ListLogsResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_redpanda_takehome_api_v1_list_logs, 0);

