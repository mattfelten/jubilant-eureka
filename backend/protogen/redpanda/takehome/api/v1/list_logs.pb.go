// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: redpanda/takehome/api/v1/list_logs.proto

package apiv1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MicroService int32

const (
	MicroService_MICRO_SERVICE_UNSPECIFIED MicroService = 0
	// Gateway produces a lot of log messages.
	MicroService_MICRO_SERVICE_GATEWAY MicroService = 1
	// The AI agent is rarely invoked and therefore produces very few log records.
	MicroService_MICRO_SERVICE_AI_AGENT MicroService = 2
	// Borked is a poorly witten service and is always boken and therefore mostly
	// spams error messages :(.
	MicroService_MICRO_SERVICE_BORKED MicroService = 3
)

// Enum value maps for MicroService.
var (
	MicroService_name = map[int32]string{
		0: "MICRO_SERVICE_UNSPECIFIED",
		1: "MICRO_SERVICE_GATEWAY",
		2: "MICRO_SERVICE_AI_AGENT",
		3: "MICRO_SERVICE_BORKED",
	}
	MicroService_value = map[string]int32{
		"MICRO_SERVICE_UNSPECIFIED": 0,
		"MICRO_SERVICE_GATEWAY":     1,
		"MICRO_SERVICE_AI_AGENT":    2,
		"MICRO_SERVICE_BORKED":      3,
	}
)

func (x MicroService) Enum() *MicroService {
	p := new(MicroService)
	*p = x
	return p
}

func (x MicroService) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MicroService) Descriptor() protoreflect.EnumDescriptor {
	return file_redpanda_takehome_api_v1_list_logs_proto_enumTypes[0].Descriptor()
}

func (MicroService) Type() protoreflect.EnumType {
	return &file_redpanda_takehome_api_v1_list_logs_proto_enumTypes[0]
}

func (x MicroService) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MicroService.Descriptor instead.
func (MicroService) EnumDescriptor() ([]byte, []int) {
	return file_redpanda_takehome_api_v1_list_logs_proto_rawDescGZIP(), []int{0}
}

// ListLogsRequest is the request for ListLogs call.
type ListLogsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PartitionId    int32                  `protobuf:"varint,1,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	Offset         int64                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	StartTimestamp int64                  `protobuf:"varint,3,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	MaxResults     int32                  `protobuf:"varint,4,opt,name=max_results,json=maxResults,proto3" json:"max_results,omitempty"`
	// LogMessages beyond this size limit will omit the log response
	// and set the bool
	MaxMessageSize int32 `protobuf:"varint,5,opt,name=max_message_size,json=maxMessageSize,proto3" json:"max_message_size,omitempty"`
	// The service whose log messages you want to retrieve.
	Service MicroService `protobuf:"varint,6,opt,name=service,proto3,enum=redpanda.takehome.api.v1.MicroService" json:"service,omitempty"`
	// If true, the server will hold the call open and continuously
	// emit new log messages as theyâ€™re produced.
	Follow        bool `protobuf:"varint,7,opt,name=follow,proto3" json:"follow,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLogsRequest) Reset() {
	*x = ListLogsRequest{}
	mi := &file_redpanda_takehome_api_v1_list_logs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLogsRequest) ProtoMessage() {}

func (x *ListLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_redpanda_takehome_api_v1_list_logs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLogsRequest.ProtoReflect.Descriptor instead.
func (*ListLogsRequest) Descriptor() ([]byte, []int) {
	return file_redpanda_takehome_api_v1_list_logs_proto_rawDescGZIP(), []int{0}
}

func (x *ListLogsRequest) GetPartitionId() int32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

func (x *ListLogsRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListLogsRequest) GetStartTimestamp() int64 {
	if x != nil {
		return x.StartTimestamp
	}
	return 0
}

func (x *ListLogsRequest) GetMaxResults() int32 {
	if x != nil {
		return x.MaxResults
	}
	return 0
}

func (x *ListLogsRequest) GetMaxMessageSize() int32 {
	if x != nil {
		return x.MaxMessageSize
	}
	return 0
}

func (x *ListLogsRequest) GetService() MicroService {
	if x != nil {
		return x.Service
	}
	return MicroService_MICRO_SERVICE_UNSPECIFIED
}

func (x *ListLogsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

// ListLogsResponse is the response for ListLogsRequest call.
type ListLogsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ControlMessage:
	//
	//	*ListLogsResponse_Data
	//	*ListLogsResponse_Phase
	//	*ListLogsResponse_Error
	ControlMessage isListLogsResponse_ControlMessage `protobuf_oneof:"control_message"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListLogsResponse) Reset() {
	*x = ListLogsResponse{}
	mi := &file_redpanda_takehome_api_v1_list_logs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLogsResponse) ProtoMessage() {}

func (x *ListLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_redpanda_takehome_api_v1_list_logs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLogsResponse.ProtoReflect.Descriptor instead.
func (*ListLogsResponse) Descriptor() ([]byte, []int) {
	return file_redpanda_takehome_api_v1_list_logs_proto_rawDescGZIP(), []int{1}
}

func (x *ListLogsResponse) GetControlMessage() isListLogsResponse_ControlMessage {
	if x != nil {
		return x.ControlMessage
	}
	return nil
}

func (x *ListLogsResponse) GetData() *ListLogsResponse_Log {
	if x != nil {
		if x, ok := x.ControlMessage.(*ListLogsResponse_Data); ok {
			return x.Data
		}
	}
	return nil
}

func (x *ListLogsResponse) GetPhase() *ListLogsResponse_CompletionSummary {
	if x != nil {
		if x, ok := x.ControlMessage.(*ListLogsResponse_Phase); ok {
			return x.Phase
		}
	}
	return nil
}

func (x *ListLogsResponse) GetError() string {
	if x != nil {
		if x, ok := x.ControlMessage.(*ListLogsResponse_Error); ok {
			return x.Error
		}
	}
	return ""
}

type isListLogsResponse_ControlMessage interface {
	isListLogsResponse_ControlMessage()
}

type ListLogsResponse_Data struct {
	Data *ListLogsResponse_Log `protobuf:"bytes,1,opt,name=data,proto3,oneof"`
}

type ListLogsResponse_Phase struct {
	Phase *ListLogsResponse_CompletionSummary `protobuf:"bytes,2,opt,name=phase,proto3,oneof"`
}

type ListLogsResponse_Error struct {
	Error string `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*ListLogsResponse_Data) isListLogsResponse_ControlMessage() {}

func (*ListLogsResponse_Phase) isListLogsResponse_ControlMessage() {}

func (*ListLogsResponse_Error) isListLogsResponse_ControlMessage() {}

type ListLogsResponse_Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartitionId   int32                  `protobuf:"varint,1,opt,name=partition_id,json=partitionId,proto3" json:"partition_id,omitempty"`
	Offset        int64                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Log           string                 `protobuf:"bytes,4,opt,name=log,proto3" json:"log,omitempty"`
	TooLarge      bool                   `protobuf:"varint,5,opt,name=too_large,json=tooLarge,proto3" json:"too_large,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLogsResponse_Log) Reset() {
	*x = ListLogsResponse_Log{}
	mi := &file_redpanda_takehome_api_v1_list_logs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLogsResponse_Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLogsResponse_Log) ProtoMessage() {}

func (x *ListLogsResponse_Log) ProtoReflect() protoreflect.Message {
	mi := &file_redpanda_takehome_api_v1_list_logs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLogsResponse_Log.ProtoReflect.Descriptor instead.
func (*ListLogsResponse_Log) Descriptor() ([]byte, []int) {
	return file_redpanda_takehome_api_v1_list_logs_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ListLogsResponse_Log) GetPartitionId() int32 {
	if x != nil {
		return x.PartitionId
	}
	return 0
}

func (x *ListLogsResponse_Log) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListLogsResponse_Log) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ListLogsResponse_Log) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *ListLogsResponse_Log) GetTooLarge() bool {
	if x != nil {
		return x.TooLarge
	}
	return false
}

type ListLogsResponse_CompletionSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ElapsedMs     int64                  `protobuf:"varint,1,opt,name=elapsed_ms,json=elapsedMs,proto3" json:"elapsed_ms,omitempty"`             // Total elapsed time in milliseconds.
	IsCancelled   bool                   `protobuf:"varint,2,opt,name=is_cancelled,json=isCancelled,proto3" json:"is_cancelled,omitempty"`       // Whether the call was cancelled.
	BytesConsumed int64                  `protobuf:"varint,3,opt,name=bytes_consumed,json=bytesConsumed,proto3" json:"bytes_consumed,omitempty"` // Total consumed bytes.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLogsResponse_CompletionSummary) Reset() {
	*x = ListLogsResponse_CompletionSummary{}
	mi := &file_redpanda_takehome_api_v1_list_logs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLogsResponse_CompletionSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLogsResponse_CompletionSummary) ProtoMessage() {}

func (x *ListLogsResponse_CompletionSummary) ProtoReflect() protoreflect.Message {
	mi := &file_redpanda_takehome_api_v1_list_logs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLogsResponse_CompletionSummary.ProtoReflect.Descriptor instead.
func (*ListLogsResponse_CompletionSummary) Descriptor() ([]byte, []int) {
	return file_redpanda_takehome_api_v1_list_logs_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ListLogsResponse_CompletionSummary) GetElapsedMs() int64 {
	if x != nil {
		return x.ElapsedMs
	}
	return 0
}

func (x *ListLogsResponse_CompletionSummary) GetIsCancelled() bool {
	if x != nil {
		return x.IsCancelled
	}
	return false
}

func (x *ListLogsResponse_CompletionSummary) GetBytesConsumed() int64 {
	if x != nil {
		return x.BytesConsumed
	}
	return 0
}

var File_redpanda_takehome_api_v1_list_logs_proto protoreflect.FileDescriptor

const file_redpanda_takehome_api_v1_list_logs_proto_rawDesc = "" +
	"\n" +
	"(redpanda/takehome/api/v1/list_logs.proto\x12\x18redpanda.takehome.api.v1\"\x9a\x02\n" +
	"\x0fListLogsRequest\x12!\n" +
	"\fpartition_id\x18\x01 \x01(\x05R\vpartitionId\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\x12'\n" +
	"\x0fstart_timestamp\x18\x03 \x01(\x03R\x0estartTimestamp\x12\x1f\n" +
	"\vmax_results\x18\x04 \x01(\x05R\n" +
	"maxResults\x12(\n" +
	"\x10max_message_size\x18\x05 \x01(\x05R\x0emaxMessageSize\x12@\n" +
	"\aservice\x18\x06 \x01(\x0e2&.redpanda.takehome.api.v1.MicroServiceR\aservice\x12\x16\n" +
	"\x06follow\x18\a \x01(\bR\x06follow\"\xe7\x03\n" +
	"\x10ListLogsResponse\x12D\n" +
	"\x04data\x18\x01 \x01(\v2..redpanda.takehome.api.v1.ListLogsResponse.LogH\x00R\x04data\x12T\n" +
	"\x05phase\x18\x02 \x01(\v2<.redpanda.takehome.api.v1.ListLogsResponse.CompletionSummaryH\x00R\x05phase\x12\x16\n" +
	"\x05error\x18\x03 \x01(\tH\x00R\x05error\x1a\x8d\x01\n" +
	"\x03Log\x12!\n" +
	"\fpartition_id\x18\x01 \x01(\x05R\vpartitionId\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12\x10\n" +
	"\x03log\x18\x04 \x01(\tR\x03log\x12\x1b\n" +
	"\ttoo_large\x18\x05 \x01(\bR\btooLarge\x1a|\n" +
	"\x11CompletionSummary\x12\x1d\n" +
	"\n" +
	"elapsed_ms\x18\x01 \x01(\x03R\telapsedMs\x12!\n" +
	"\fis_cancelled\x18\x02 \x01(\bR\visCancelled\x12%\n" +
	"\x0ebytes_consumed\x18\x03 \x01(\x03R\rbytesConsumedB\x11\n" +
	"\x0fcontrol_message*~\n" +
	"\fMicroService\x12\x1d\n" +
	"\x19MICRO_SERVICE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15MICRO_SERVICE_GATEWAY\x10\x01\x12\x1a\n" +
	"\x16MICRO_SERVICE_AI_AGENT\x10\x02\x12\x18\n" +
	"\x14MICRO_SERVICE_BORKED\x10\x032s\n" +
	"\n" +
	"LogService\x12e\n" +
	"\bListLogs\x12).redpanda.takehome.api.v1.ListLogsRequest\x1a*.redpanda.takehome.api.v1.ListLogsResponse\"\x000\x01B\x8b\x02\n" +
	"\x1ccom.redpanda.takehome.api.v1B\rListLogsProtoP\x01ZYgithub.com/redpanda-data/takehome-ux-team/backend/protogen/redpanda/takehome/api/v1;apiv1\xa2\x02\x03RTA\xaa\x02\x18Redpanda.Takehome.Api.V1\xca\x02\x18Redpanda\\Takehome\\Api\\V1\xe2\x02$Redpanda\\Takehome\\Api\\V1\\GPBMetadata\xea\x02\x1bRedpanda::Takehome::Api::V1b\x06proto3"

var (
	file_redpanda_takehome_api_v1_list_logs_proto_rawDescOnce sync.Once
	file_redpanda_takehome_api_v1_list_logs_proto_rawDescData []byte
)

func file_redpanda_takehome_api_v1_list_logs_proto_rawDescGZIP() []byte {
	file_redpanda_takehome_api_v1_list_logs_proto_rawDescOnce.Do(func() {
		file_redpanda_takehome_api_v1_list_logs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_redpanda_takehome_api_v1_list_logs_proto_rawDesc), len(file_redpanda_takehome_api_v1_list_logs_proto_rawDesc)))
	})
	return file_redpanda_takehome_api_v1_list_logs_proto_rawDescData
}

var file_redpanda_takehome_api_v1_list_logs_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_redpanda_takehome_api_v1_list_logs_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_redpanda_takehome_api_v1_list_logs_proto_goTypes = []any{
	(MicroService)(0),                          // 0: redpanda.takehome.api.v1.MicroService
	(*ListLogsRequest)(nil),                    // 1: redpanda.takehome.api.v1.ListLogsRequest
	(*ListLogsResponse)(nil),                   // 2: redpanda.takehome.api.v1.ListLogsResponse
	(*ListLogsResponse_Log)(nil),               // 3: redpanda.takehome.api.v1.ListLogsResponse.Log
	(*ListLogsResponse_CompletionSummary)(nil), // 4: redpanda.takehome.api.v1.ListLogsResponse.CompletionSummary
}
var file_redpanda_takehome_api_v1_list_logs_proto_depIdxs = []int32{
	0, // 0: redpanda.takehome.api.v1.ListLogsRequest.service:type_name -> redpanda.takehome.api.v1.MicroService
	3, // 1: redpanda.takehome.api.v1.ListLogsResponse.data:type_name -> redpanda.takehome.api.v1.ListLogsResponse.Log
	4, // 2: redpanda.takehome.api.v1.ListLogsResponse.phase:type_name -> redpanda.takehome.api.v1.ListLogsResponse.CompletionSummary
	1, // 3: redpanda.takehome.api.v1.LogService.ListLogs:input_type -> redpanda.takehome.api.v1.ListLogsRequest
	2, // 4: redpanda.takehome.api.v1.LogService.ListLogs:output_type -> redpanda.takehome.api.v1.ListLogsResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_redpanda_takehome_api_v1_list_logs_proto_init() }
func file_redpanda_takehome_api_v1_list_logs_proto_init() {
	if File_redpanda_takehome_api_v1_list_logs_proto != nil {
		return
	}
	file_redpanda_takehome_api_v1_list_logs_proto_msgTypes[1].OneofWrappers = []any{
		(*ListLogsResponse_Data)(nil),
		(*ListLogsResponse_Phase)(nil),
		(*ListLogsResponse_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_redpanda_takehome_api_v1_list_logs_proto_rawDesc), len(file_redpanda_takehome_api_v1_list_logs_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_redpanda_takehome_api_v1_list_logs_proto_goTypes,
		DependencyIndexes: file_redpanda_takehome_api_v1_list_logs_proto_depIdxs,
		EnumInfos:         file_redpanda_takehome_api_v1_list_logs_proto_enumTypes,
		MessageInfos:      file_redpanda_takehome_api_v1_list_logs_proto_msgTypes,
	}.Build()
	File_redpanda_takehome_api_v1_list_logs_proto = out.File
	file_redpanda_takehome_api_v1_list_logs_proto_goTypes = nil
	file_redpanda_takehome_api_v1_list_logs_proto_depIdxs = nil
}
